with Ada.Text_IO;
with Ada.Command_Line;

package body Word_Lists is

  	package ACL renames Ada.Command_Line;
 
-- Procedures necesarios dentro del paquete


	procedure Add_Word (List: in out Word_List_Type; 
		        Word: in ASU.Unbounded_String) is

	P_Aux: Word_List_Type;
	P_Aux2: Word_List_Type;
	begin 
		if (List = Null) then
			List:= new cell; 
			List.Word:=Word;
			List.Count:=1;
			List.Next:=Null;
		else
			P_Aux:= List;
			while not (P_Aux.Next = Null) loop
				P_Aux := P_Aux.Next;
			end loop;
				P_Aux2:= new cell;
				P_Aux2.Word:= Word;
				P_Aux2.Count:=1;
				P_Aux2.Next:= Null;
				P_Aux.Next:= P_Aux2;
		end if;
		
	End Add_Word;

	procedure Print_All (List: in Word_List_Type) is 
		P_Aux:Word_List_Type;
	begin
			P_Aux:=List;
		while not (P_Aux.Next = null) loop
			Ada.Text_IO.Put_Line("Memoria:" & ASU.To_String(P_Aux.Word));
			P_Aux:=P_Aux.Next;
		end loop;
	
	end Print_All;


	procedure Delete_Word (List: in out Word_List_Type; 
				  Word: in ASU.Unbounded_String) is 
	begin
		null;
	end Delete_word;
   
	procedure Search_Word (List: in Word_List_Type;
				  Word: in ASU.Unbounded_String;
				  Count: out Natural) is 
	begin
		null;
	end Search_Word;
   
   
   procedure Max_Word (List: in Word_List_Type;
		        Word: out ASU.Unbounded_String;
		        Count: out Natural) is 
	begin
		null;
	end Max_word;
        
end Word_Lists;
